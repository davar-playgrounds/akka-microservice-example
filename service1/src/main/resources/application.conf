include "akka.conf"

akka {
  remote {
    log-remote-lifecycle-events = on
    netty.tcp {
      port = 2552
    }
  }
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    debug {
      receive = off
      lifecycle = off
    }
  }

  cluster {
    auto-down-unreachable-after = 10s
  }
}

# should be off when cluster is formed!
akka.management.cluster.bootstrap.new-cluster-enabled=on

akka.management.cluster.bootstrap.contact-point-discovery.service-name = "service1"
akka.management.cluster.bootstrap.contact-point-discovery.discovery-method = kubernetes-api
akka.cluster.shutdown-after-unsuccessful-join-seed-nodes = 30s
akka.coordinated-shutdown.exit-jvm = on

akka.discovery {
  kubernetes-api {
    pod-label-selector = "app=%s"
  }
}

# Kamon

kamon.instrumentation.akka.filters {
  actors {
    doomsday-wildcard = on
  }

  actors.track {
    includes = [ "**" ]
  }

  actors.trace {
    includes = [ "**" ]
  }
}

kamon {
  jaeger {

    # Define the host/port where the Jaeger Collector/Agent is listening.
    host = "jaeger-collector.kamon"
    port = 14268

    # Protocol used to send data to Jaeger. The available options are:
    #   - http: Sends spans using jaeger.thrift over HTTP (collector).
    #   - https: Sends spans using jaeger.thrift over HTTPS (collector).
    #   - udp: Sends spans using jaeger.thrift compact over UDP (agent).
    protocol = http

    # Enable or disable including tags from kamon.environment as labels
    include-environment-tags = yes
  }
}

# Kamon